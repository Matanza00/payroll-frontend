import React, { useState } from 'react';
import axios from 'axios';

const PayslipGenerateForm = () => {
  const [formValues, setFormValues] = useState({
    payrollId: '',
    slipDate: '',
    generatedBy: '',
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormValues({
      ...formValues,
      [name]: value,
    });
  };

  const handleSubmit = async (event) => {
    event.preventDefault();

    const payrollId = parseInt(formValues.payrollId, 10);
    if (isNaN(payrollId)) {
      console.error('Invalid payrollId provided. Expected an integer.');
      return;
    }

    const requestData = {
      payrollId: payrollId,
      slipDate: formValues.slipDate,
      generatedBy: formValues.generatedBy,
    };

    try {
      // Create the pay slip
      const response = await axios.post(
        'http://localhost:8080/api/v1/pay-slips',
        requestData,
      );

      // If the creation is successful, now generate the PDF
      const pdfResponse = await axios.get(
        `http://localhost:8080/api/v1/pay-slips/pdf/${response.data.id}`,
        {
          responseType: 'blob',
        },
      );

      const url = window.URL.createObjectURL(
        new Blob([pdfResponse.data], { type: 'application/pdf' }),
      );
      const link = document.createElement('a');
      link.href = url;
      link.setAttribute('download', 'payslip.pdf');
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
    } catch (error) {
      console.error('Error generating payslip:', error);
    }
  };

  return (
    <form onSubmit={handleSubmit}>
      <input
        type="text"
        name="payrollId"
        value={formValues.payrollId}
        onChange={handleChange}
        placeholder="Payroll ID"
      />
      <input
        type="date"
        name="slipDate"
        value={formValues.slipDate}
        onChange={handleChange}
        placeholder="Slip Date"
      />
      <input
        type="text"
        name="generatedBy"
        value={formValues.generatedBy}
        onChange={handleChange}
        placeholder="Generated By"
      />
      <button type="submit">Generate Payslip</button>
    </form>
  );
};

export default PayslipGenerateForm;
